<snippet>
	<content><![CDATA[
vl logs;
void computeLogs(ll n=1e6){
    logs.resize(n+1,0);
    for(int i=2;i<=n;i++){
        logs[i]=logs[i/2]+1;}
}//Inititalise this function in the main() first, and then call ST.
struct ST{
    int n;int LOG=0;
    vector<vector<ll> > t;

    ll (*f)(ll a,ll b) = [](ll a, ll b)->ll{
        return __gcd(a,b);
    };

    ST(vector<ll> v, ll(*mfp)(ll a,ll b)=[](ll a,ll b)->ll{
        return __gcd(a,b);
    }){
        f=mfp;
        n=v.size();
        LOG=logs[n];
        t.resize(LOG+1,vector<ll> (n,0));
        for(int len=0;len<=LOG;len++){
            for(int i=0;i+(1<<len)-1<n;i++){
                if(len==0){
                    t[len][i]=v[i];
                    continue;
                }
                t[len][i]=f(t[len-1][i],t[len-1][i+(1<<(len-1))]);
            }
        }
    }
    //l,r are 0 indexed. Ex: st.ask(l,r)
    ll ask(ll l,ll r){
        ll len=r-l+1,k=logs[len];
        ll L=l,R=r-(1<<k)+1;
        return f(t[k][l],t[k][r-(1<<k)+1]);
    }
};
//To build Sparse Table for vector<ll> v(n), use: ST st(v);

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Sparse Table</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
